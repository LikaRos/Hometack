[{"D:\\HTML\\REACT\\goit-react-hw-02-phonebook\\src\\index.js":"1","D:\\HTML\\REACT\\goit-react-hw-02-phonebook\\src\\components\\App.jsx":"2","D:\\HTML\\REACT\\goit-react-hw-02-phonebook\\src\\components\\ContactsList\\ContactsList.jsx":"3","D:\\HTML\\REACT\\goit-react-hw-02-phonebook\\src\\components\\ContactFilter\\ContactFilter.jsx":"4","D:\\HTML\\REACT\\goit-react-hw-02-phonebook\\src\\components\\ContactForm\\ContactForm.jsx":"5"},{"size":258,"mtime":1658594053155,"results":"6","hashOfConfig":"7"},{"size":1617,"mtime":1658594052875,"results":"8","hashOfConfig":"7"},{"size":970,"mtime":1658594053145,"results":"9","hashOfConfig":"7"},{"size":308,"mtime":1658594053016,"results":"10","hashOfConfig":"7"},{"size":1436,"mtime":1658596419172,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1l6vfih",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"15"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"D:\\HTML\\REACT\\goit-react-hw-02-phonebook\\src\\index.js",[],[],[],"D:\\HTML\\REACT\\goit-react-hw-02-phonebook\\src\\components\\App.jsx",[],[],"D:\\HTML\\REACT\\goit-react-hw-02-phonebook\\src\\components\\ContactsList\\ContactsList.jsx",["30"],[],"import PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nexport const ContactsList = ({ contactsList, onDelete }) => {\r\n  return (\r\n    <ul>\r\n      {contactsList.map(({ id, name, phone }) => {\r\n        return (\r\n          <li key={id}>\r\n            <div className=\"textWrap\">\r\n              <p>Name: {name}</p>\r\n              <p>Phone: {phone}</p>\r\n            </div>\r\n\r\n            <div className=\"btn-wrap\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-link card-link\"\r\n                onClick={() => onDelete(id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\nContactsList.propTypes = {\r\n  contactsList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n      phone: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n","D:\\HTML\\REACT\\goit-react-hw-02-phonebook\\src\\components\\ContactFilter\\ContactFilter.jsx",[],[],"D:\\HTML\\REACT\\goit-react-hw-02-phonebook\\src\\components\\ContactForm\\ContactForm.jsx",["31"],[],"import { Component } from 'react';\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    phone: '',\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n    const id = nanoid();\r\n\r\n    const contact = { ...this.state, id };\r\n\r\n    this.props.addContactData(contact);\r\n\r\n    this.setState({ name: '', phone: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, phone } = this.state;\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Phone\r\n          <input\r\n            type=\"phone\"\r\n            name=\"phone\"\r\n            value={phone}\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Add contacts</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n",{"ruleId":"32","severity":1,"message":"33","line":2,"column":8,"nodeType":"34","messageId":"35","endLine":2,"endColumn":14},{"ruleId":"32","severity":1,"message":"33","line":4,"column":8,"nodeType":"34","messageId":"35","endLine":4,"endColumn":14},"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar"]